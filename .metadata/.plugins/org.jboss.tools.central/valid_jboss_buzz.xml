<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Python 2 support is going away soon: Make the move to Python 3</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/XRYZ1cSeKBU/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><category term="Python" scheme="searchisko:content:tags" /><category term="Python 3" scheme="searchisko:content:tags" /><author><name>Langdon White</name></author><id>searchisko:content:id:jbossorg_blog-python_2_support_is_going_away_soon_make_the_move_to_python_3</id><updated>2019-10-25T07:00:04Z</updated><published>2019-10-25T07:00:04Z</published><content type="html">&lt;p&gt;Seeing &lt;a href="https://twitter.com/gvanrossum/status/1170949978036084736"&gt;this tweet from Guido van Rossum&lt;/a&gt; the other day prompted me to write this &amp;#8220;OMG, Python 2 is going away SOON&amp;#8221; article. You have definitely heard it before, but seriously, folks, the Python upstream community is ending support for Python 2 at the end of the year!&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s stop saying &amp;#8220;2020&amp;#8221; because that sounds far away when, in fact, we are talking about January 1, 2020, which is two and half months from now. In this article, I&amp;#8217;ll provide some quick links and basic information to help you make the move to &lt;a href="https://www.python.org/download/releases/3.0/"&gt;Python 3&lt;/a&gt;.&lt;span id="more-642947"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Moving to Python 3&lt;/h2&gt; &lt;p&gt;I hope that you have already been convinced about why you should move to Python 3 but, if not, you should definitely check out &lt;a href="https://twitter.com/ncoghlan_dev"&gt;Nick Coghlan’&lt;/a&gt;s &lt;a href="https://ncoghlan-devs-python-notes.readthedocs.io/en/latest/python3/questions_and_answers.html"&gt;Python 3 Q&amp;#38;A&lt;/a&gt; and &lt;a href="https://twitter.com/brettsky"&gt;Brett Cannon&lt;/a&gt;’s &lt;a href="https://snarky.ca/why-python-3-exists"&gt;Why Python 3 exists&lt;/a&gt; (as recommended by the &lt;a href="https://docs.python.org/3/howto/pyporting.html"&gt;Python porting page&lt;/a&gt;). Speaking from my own experience, I find Python 3 to be &lt;strong&gt;much&lt;/strong&gt; more consistent in language constructs and way more in line with the &amp;#8220;&lt;a href="https://www.python.org/dev/peps/pep-0206/#batteries-included-philosophy"&gt;batteries included&lt;/a&gt;&amp;#8221; philosophy.&lt;/p&gt; &lt;p&gt;Personally, my hesitation would be directly related to how much of the ecosystem is already on Python 3. In other words, language adoption is often more about the ecosystem than it is about the language itself.&lt;/p&gt; &lt;h2&gt;The ecosystem is ready&lt;/h2&gt; &lt;p&gt;Let me assure you; the ecosystem is &lt;strong&gt;ready&lt;/strong&gt;. According to the &lt;a href="https://fedora.portingdb.xyz/"&gt;Python Porting DB&lt;/a&gt; nearly 90% of Fedora Python Libraries support Python 3. Perhaps more concerning for those of you who are still on Python 2, 80% of the libraries &lt;strong&gt;only&lt;/strong&gt; support Python 3. If you have any doubts about the particular libraries you need, you can use the &lt;a href="https://pypi.org/project/caniusepython3"&gt;caniusepython3 &lt;/a&gt;tool to be sure.&lt;/p&gt; &lt;p&gt;If you are worried about how much work it will be to move to Python 3, well, the Python Community has also gone to great lengths to make it as easy as possible. Specifically, check out tools like &lt;a href="http://python-future.org/automatic_conversion.html"&gt;Futurize&lt;/a&gt; (which passes Python 2 code through appropriate fixers and turns it into valid Python 3 code) and &lt;a href="https://python-modernize.readthedocs.io/"&gt;Modernize&lt;/a&gt; (which makes Python 2 code more modern for porting to Python 3). The community has also provided a linter that will prove to you that you have cleaned everything up.&lt;/p&gt; &lt;p&gt;However, all that said, there is always the problem of testing. No one at Red Hat or in the Python community can help you create tests that don&amp;#8217;t exist. If you don&amp;#8217;t have great test coverage, maybe this can be an opportunity to add tests. Then, the next time you want to do a refactor or introduce a new feature, you don&amp;#8217;t have to be so frightened :).&lt;/p&gt; &lt;h2&gt;Heed the call&lt;/h2&gt; &lt;p&gt;All in all, now&amp;#8217;s the time to heed Guido&amp;#8217;s call to action. Everything is ready for you to move. And, you really shouldn&amp;#8217;t have to do this again for a good long time, because Python 3 will be supported until the end of the &lt;a href="https://www.redhat.com/en/enterprise-linux-8"&gt;Red Hat Enterprise Linux 8&lt;/a&gt; lifecycle. If you can&amp;#8217;t commit quite yet, we still have your back for a couple more years with our expected &lt;a href="https://access.redhat.com/node/4079021"&gt;retirement of Python27&lt;/a&gt; in 2024.&lt;/p&gt; &lt;h3&gt;Other resources&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/products/softwarecollections/overview"&gt;Red Hat Software Collections&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/05/07/what-no-python-in-red-hat-enterprise-linux-8/"&gt;What, no Python in Red Hat Enterprise Linux 8?&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/08/13/install-python3-rhel/"&gt;How to install Python 3 on Red Hat Enterprise Linux&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2019/09/11/develop-with-django-2-and-python-3-in-a-container-with-red-hat-enterprise-linux/"&gt;Develop with Django 2 and Python 3 in a container with Red Hat Enterprise Linux&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F25%2Fpython-2-support-is-going-away-soon-make-the-move-to-python-3%2F&amp;#38;linkname=Python%202%20support%20is%20going%20away%20soon%3A%20Make%20the%20move%20to%20Python%203" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F25%2Fpython-2-support-is-going-away-soon-make-the-move-to-python-3%2F&amp;#38;linkname=Python%202%20support%20is%20going%20away%20soon%3A%20Make%20the%20move%20to%20Python%203" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F25%2Fpython-2-support-is-going-away-soon-make-the-move-to-python-3%2F&amp;#38;linkname=Python%202%20support%20is%20going%20away%20soon%3A%20Make%20the%20move%20to%20Python%203" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F25%2Fpython-2-support-is-going-away-soon-make-the-move-to-python-3%2F&amp;#38;linkname=Python%202%20support%20is%20going%20away%20soon%3A%20Make%20the%20move%20to%20Python%203" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F25%2Fpython-2-support-is-going-away-soon-make-the-move-to-python-3%2F&amp;#38;linkname=Python%202%20support%20is%20going%20away%20soon%3A%20Make%20the%20move%20to%20Python%203" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F25%2Fpython-2-support-is-going-away-soon-make-the-move-to-python-3%2F&amp;#38;linkname=Python%202%20support%20is%20going%20away%20soon%3A%20Make%20the%20move%20to%20Python%203" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F25%2Fpython-2-support-is-going-away-soon-make-the-move-to-python-3%2F&amp;#38;linkname=Python%202%20support%20is%20going%20away%20soon%3A%20Make%20the%20move%20to%20Python%203" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F25%2Fpython-2-support-is-going-away-soon-make-the-move-to-python-3%2F&amp;#038;title=Python%202%20support%20is%20going%20away%20soon%3A%20Make%20the%20move%20to%20Python%203" data-a2a-url="https://developers.redhat.com/blog/2019/10/25/python-2-support-is-going-away-soon-make-the-move-to-python-3/" data-a2a-title="Python 2 support is going away soon: Make the move to Python 3"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/25/python-2-support-is-going-away-soon-make-the-move-to-python-3/"&gt;Python 2 support is going away soon: Make the move to Python 3&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/XRYZ1cSeKBU" height="1" width="1" alt=""/&gt;</content><summary>Seeing this tweet from Guido van Rossum the other day prompted me to write this “OMG, Python 2 is going away SOON” article. You have definitely heard it before, but seriously, folks, the Python upstream community is ending support for Python 2 at the end of the year! Let’s stop saying “2020” because that sounds far away when, in fact, we are talking about January 1, 2020, which is two and half mon...</summary><dc:creator>Langdon White</dc:creator><dc:date>2019-10-25T07:00:04Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/25/python-2-support-is-going-away-soon-make-the-move-to-python-3/</feedburner:origLink></entry><entry><title>Bring joy to development with Quarkus, the cloud-native Java framework</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/De1kQVeCM_o/" /><category term="devnation" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><author><name>Editorial Team</name></author><id>searchisko:content:id:jbossorg_blog-bring_joy_to_development_with_quarkus_the_cloud_native_java_framework</id><updated>2019-10-24T07:00:40Z</updated><published>2019-10-24T07:00:40Z</published><content type="html">&lt;p&gt;Our first &lt;a href="https://developers.redhat.com/devnationlive-india/"&gt;DevNation Live regional event was held in Bengaluru, India&lt;/a&gt; in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists.&lt;/p&gt; &lt;p class="selectionShareable"&gt;&lt;a href="https://developers.redhat.com/blog/2019/03/07/quarkus-next-generation-kubernetes-native-java-framework/"&gt;Quarkus&lt;/a&gt; is revolutionizing the way that we develop &lt;a href="https://developers.redhat.com/developer-tools/java"&gt;Java&lt;/a&gt; applications for the cloud-native era, and in this presentation, &lt;a href="https://developers.redhat.com/blog/author/yanaga/"&gt;Edson Yanaga&lt;/a&gt; explains why it also sparks joy. &lt;span id="more-627017"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Watch this live coding session to get familiar with Quarkus and learn how your old and new favorite APIs will start in a matter of milliseconds and consume tiny amounts of memory. Hot reload capabilities for development will bring you instant joy.&lt;/p&gt; &lt;p&gt;Watch the complete presentation:&lt;br /&gt; &lt;iframe src="https://www.youtube.com/embed/GZzcjVZ-WMQ" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://speakerdeck.com/yanaga/coding-that-sparks-joy-with-quarkus"&gt;See the slides here.&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Learn more&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;Join us at an upcoming&lt;a href="https://developers.redhat.com/events/"&gt; developer event&lt;/a&gt;, and see our collection of&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt; past DevNation Live tech talks&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F24%2Fbring-joy-to-development-with-quarkus-the-cloud-native-java-framework%2F&amp;#38;linkname=Bring%20joy%20to%20development%20with%20Quarkus%2C%20the%20cloud-native%20Java%20framework" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F24%2Fbring-joy-to-development-with-quarkus-the-cloud-native-java-framework%2F&amp;#38;linkname=Bring%20joy%20to%20development%20with%20Quarkus%2C%20the%20cloud-native%20Java%20framework" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F24%2Fbring-joy-to-development-with-quarkus-the-cloud-native-java-framework%2F&amp;#38;linkname=Bring%20joy%20to%20development%20with%20Quarkus%2C%20the%20cloud-native%20Java%20framework" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F24%2Fbring-joy-to-development-with-quarkus-the-cloud-native-java-framework%2F&amp;#38;linkname=Bring%20joy%20to%20development%20with%20Quarkus%2C%20the%20cloud-native%20Java%20framework" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F24%2Fbring-joy-to-development-with-quarkus-the-cloud-native-java-framework%2F&amp;#38;linkname=Bring%20joy%20to%20development%20with%20Quarkus%2C%20the%20cloud-native%20Java%20framework" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F24%2Fbring-joy-to-development-with-quarkus-the-cloud-native-java-framework%2F&amp;#38;linkname=Bring%20joy%20to%20development%20with%20Quarkus%2C%20the%20cloud-native%20Java%20framework" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F24%2Fbring-joy-to-development-with-quarkus-the-cloud-native-java-framework%2F&amp;#38;linkname=Bring%20joy%20to%20development%20with%20Quarkus%2C%20the%20cloud-native%20Java%20framework" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F24%2Fbring-joy-to-development-with-quarkus-the-cloud-native-java-framework%2F&amp;#038;title=Bring%20joy%20to%20development%20with%20Quarkus%2C%20the%20cloud-native%20Java%20framework" data-a2a-url="https://developers.redhat.com/blog/2019/10/24/bring-joy-to-development-with-quarkus-the-cloud-native-java-framework/" data-a2a-title="Bring joy to development with Quarkus, the cloud-native Java framework"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/24/bring-joy-to-development-with-quarkus-the-cloud-native-java-framework/"&gt;Bring joy to development with Quarkus, the cloud-native Java framework&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/De1kQVeCM_o" height="1" width="1" alt=""/&gt;</content><summary>Our first DevNation Live regional event was held in Bengaluru, India in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists. Quarkus is revolutionizing the way that we develop Java applications for the cloud-native era, and in this presentation, Edson Yanaga explains why it also sparks joy. Watch this live coding session to ge...</summary><dc:creator>Editorial Team</dc:creator><dc:date>2019-10-24T07:00:40Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/24/bring-joy-to-development-with-quarkus-the-cloud-native-java-framework/</feedburner:origLink></entry><entry><title>Using a MySQL database in your Red Hat OpenShift application</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Cb6_meOlT04/" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="mysql" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Don Schenck</name></author><id>searchisko:content:id:jbossorg_blog-using_a_mysql_database_in_your_red_hat_openshift_application</id><updated>2019-10-23T07:00:52Z</updated><published>2019-10-23T07:00:52Z</published><content type="html">&lt;p&gt;Creating &lt;a href="https://developers.redhat.com/blog/2019/07/18/mysql-for-developers-in-red-hat-openshift/"&gt;a MySQL database in Red Hat OpenShift&lt;/a&gt; is useful for developers, there&amp;#8217;s no doubt about that. But, once the database is ready, with tables and data, how do you use the data in your application? Is there some special magic when using Red Hat OpenShift? What about the fact that pod names can change? This article will walk you through the steps necessary to access a MySQL database that is running in your &lt;a href="https://developers.redhat.com/openshift/"&gt;OpenShift&lt;/a&gt; cluster.&lt;br /&gt; &lt;span id="more-610967"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;There is code&lt;/h2&gt; &lt;p&gt;The code to accompany this blog post is available at &lt;a href="https://github.com/redhat-developer-demos/mysql-openshift-ephemeral.git"&gt;the associated GitHub repo&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Let&amp;#8217;s get a database&lt;/h2&gt; &lt;p&gt;The first step — after creating an OpenShift cluster — is to create a MySQL database in OpenShift. &lt;a href="https://developers.redhat.com/blog/2019/07/18/mysql-for-developers-in-red-hat-openshift/"&gt;My previous article&lt;/a&gt; describes how to create an ephemeral MySQL database in your OpenShift cluster. For the sake of this article, we make the following assumptions:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;The cluster name is &lt;em&gt;mysql.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;The project name is &lt;em&gt;mysqsl-test.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;The database name is &lt;em&gt;sampledb.&lt;/em&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;If you change any of these values, you&amp;#8217;ll need to change commands and scripts as necessary.&lt;/p&gt; &lt;h2&gt;Database up and running&lt;/h2&gt; &lt;p&gt;By following the previous article, you will now have a database up and running in OpenShift. In that article, we named the MySQL database instance &lt;em&gt;mysql&lt;/em&gt;.  This is important; if you used a different name, make note of it, as we&amp;#8217;ll need it soon.&lt;/p&gt; &lt;h2&gt;The services&lt;/h2&gt; &lt;p&gt;For this demo, we&amp;#8217;re going to run two very simple microservices, &lt;em&gt;getCustomer&lt;/em&gt; and &lt;em&gt;getCustomerSummaryList&lt;/em&gt;, in pods in our OpenShift cluster. The source code for these services exists in a directory in &lt;a href="https://github.com/redhat-developer-demos/mysql-openshift-ephemeral"&gt;a GitHub repo&lt;/a&gt; (mentioned previously), so rather than create an image on our local machine and push it to our cluster, we&amp;#8217;ll use OpenShift&amp;#8217;s slick Source-to-Image (or S2I) build feature.&lt;/p&gt; &lt;p&gt;The S2I feature allows you to reference a GitHub repo in OpenShift and trigger automatic builds from source. OpenShift will fetch the source code, analyze it, and build it according to what type of source code it is (e.g., Node.js, Ruby, etc.). The resulting image will be stored in the OpenShift cluster&amp;#8217;s internal registry.&lt;/p&gt; &lt;p&gt;You can optionally configure your GitHub repo to post a webhook to your OpenShift cluster whenever a pull request is approved, triggering a rebuild of the OpenShift-hosted image.&lt;/p&gt; &lt;p&gt;To build our microservices from source, we&amp;#8217;ll use the following commands.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You need to alter the MYSQL_USER and MYSQL_PASSWORD values to match the credentials that were supplied when you created the database (in the previous article). If you don&amp;#8217;t have those values, you&amp;#8217;ll need to add a user with the proper rights to your MySQL instance.&lt;/p&gt; &lt;pre&gt;oc new-app https://github.com/redhat-developer-demos/mysql-openshift-ephemeral.git --context-dir=src/getCustomer --name getcustomer -e MYSQL_HOST=mysql -e MYSQL_DATABASE=sampledb -e MYSQL_USER=mysql_userid_goes_here -e MYSQL_PASSWORD=mysql_password_goes_here&lt;/pre&gt; &lt;pre&gt;oc new-app https://github.com/redhat-developer-demos/mysql-openshift-ephemeral.git --context-dir=src/getCustomerSummaryList --name getcustomersummarylist -e MYSQL_HOST=mysql -e MYSQL_DATABASE=sampledb -e MYSQL_USER=mysql_userid_goes_here -e MYSQL_PASSWORD=mysql_password_goes_here&lt;/pre&gt; &lt;p&gt;These two commands will launch builds inside your OpenShift cluster that should take about a minute. If you run &lt;code&gt;oc get pods&lt;/code&gt;, you can see them running. When they&amp;#8217;re finished, we have to services running in our OpenShift cluster. They are not reachable from outside the cluster; this is by design. We&amp;#8217;re going to add a website to the cluster as well. That website will use these two services, and we&amp;#8217;ll expose the website to the world via a public IP address and URL.&lt;/p&gt; &lt;h2&gt;The website&lt;/h2&gt; &lt;p&gt;To create the website, we&amp;#8217;ll use a different method. Rather than use source code, we&amp;#8217;ll pull a Linux image into OpenShift. The following command will pull the image into the OpenShift cluster&amp;#8217;s internal image registry and start it.&lt;/p&gt; &lt;pre&gt;oc new-app --name mvccustomer --docker-image=quay.io/donschenck/mvccustomer:latest -e GET_CUSTOMER_SUMMARY_LIST_URI="http://getcustomersummarylist:8080/customers" -e GET_CUSTOMER_URI="http://getcustomer:8080/customer"&lt;/pre&gt; &lt;p&gt;Note that we&amp;#8217;re supplying environment variables that define the path, inside OpenShift, to the two services we just built.&lt;/p&gt; &lt;p&gt;There&amp;#8217;s one more small step. We need to expose this website to the world so can browse to it from our desktop browser. We do that, and create a &amp;#8220;route&amp;#8221; in OpenShift, by using the following command:&lt;/p&gt; &lt;pre&gt;oc expose service mvccustomer --insecure-skip-tls-verify=false&lt;/pre&gt; &lt;p&gt;At this point, you have two microservices that will retrieve a customer list and a single customer from your MySQL database, running in OpenShift — as is our ephemeral MySQL database. We also have a website that uses these two services. We can see the URL for our website by running the following command:&lt;/p&gt; &lt;pre&gt;oc get routes&lt;/pre&gt; &lt;p&gt;Looking at the URI, you can see the obvious parts that refer to my service, my project, my cluster, and my domain. The URI format is as follows:&lt;/p&gt; &lt;pre&gt;http://{service_name}-{project-name}.app.{cluster_name}.{domain_name}&lt;/pre&gt; &lt;p&gt;Remember when I mentioned, in the &amp;#8220;Let&amp;#8217;s get a database&amp;#8221; section above, how we assumed some names? Well, if you did decide to change things up, you would notice it here.&lt;/p&gt; &lt;h2&gt;Discovery&lt;/h2&gt; &lt;p&gt;This idea, that you can know ahead of time what the URI will be, is thanks to Kubernetes&amp;#8217; feature known as &amp;#8220;Service Discovery.&amp;#8221; Because you assign a name to service, Kubernetes will keep track of the pods associated with it, even if the pod names change (e.g., a pod is deleted and replaced by a new pod). Even better: As you scale up to multiple pods, you still have only one URI. Kubernetes takes care of the load balancing between the pods.&lt;/p&gt; &lt;h2&gt;Launching the website&lt;/h2&gt; &lt;p&gt;Simply paste the URL into your browser and start clicking.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-639757 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/mvccustomer.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/mvccustomer.gif" alt="" width="962" height="577" /&gt;&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s next?&lt;/h2&gt; &lt;p&gt;The next step is to create a permanent (i.e., &lt;em&gt;not&lt;/em&gt; ephemeral) MySQL instance running in Red Hat OpenShift. That&amp;#8217;s yet another article.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F23%2Fusing-a-mysql-database-in-your-red-hat-openshift-application%2F&amp;#38;linkname=Using%20a%20MySQL%20database%20in%20your%20Red%20Hat%20OpenShift%20application" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F23%2Fusing-a-mysql-database-in-your-red-hat-openshift-application%2F&amp;#38;linkname=Using%20a%20MySQL%20database%20in%20your%20Red%20Hat%20OpenShift%20application" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F23%2Fusing-a-mysql-database-in-your-red-hat-openshift-application%2F&amp;#38;linkname=Using%20a%20MySQL%20database%20in%20your%20Red%20Hat%20OpenShift%20application" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F23%2Fusing-a-mysql-database-in-your-red-hat-openshift-application%2F&amp;#38;linkname=Using%20a%20MySQL%20database%20in%20your%20Red%20Hat%20OpenShift%20application" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F23%2Fusing-a-mysql-database-in-your-red-hat-openshift-application%2F&amp;#38;linkname=Using%20a%20MySQL%20database%20in%20your%20Red%20Hat%20OpenShift%20application" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F23%2Fusing-a-mysql-database-in-your-red-hat-openshift-application%2F&amp;#38;linkname=Using%20a%20MySQL%20database%20in%20your%20Red%20Hat%20OpenShift%20application" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F23%2Fusing-a-mysql-database-in-your-red-hat-openshift-application%2F&amp;#38;linkname=Using%20a%20MySQL%20database%20in%20your%20Red%20Hat%20OpenShift%20application" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F23%2Fusing-a-mysql-database-in-your-red-hat-openshift-application%2F&amp;#038;title=Using%20a%20MySQL%20database%20in%20your%20Red%20Hat%20OpenShift%20application" data-a2a-url="https://developers.redhat.com/blog/2019/10/23/using-a-mysql-database-in-your-red-hat-openshift-application/" data-a2a-title="Using a MySQL database in your Red Hat OpenShift application"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/23/using-a-mysql-database-in-your-red-hat-openshift-application/"&gt;Using a MySQL database in your Red Hat OpenShift application&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Cb6_meOlT04" height="1" width="1" alt=""/&gt;</content><summary>Creating a MySQL database in Red Hat OpenShift is useful for developers, there’s no doubt about that. But, once the database is ready, with tables and data, how do you use the data in your application? Is there some special magic when using Red Hat OpenShift? What about the fact that pod names can change? This article will walk you through the steps necessary to access a MySQL database that is run...</summary><dc:creator>Don Schenck</dc:creator><dc:date>2019-10-23T07:00:52Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/23/using-a-mysql-database-in-your-red-hat-openshift-application/</feedburner:origLink></entry><entry><title>Introducing jBPM's Human Task recommendation API</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/MIasCImfmlA/introducing-jbpms-human-task.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Rui Vieira</name></author><id>searchisko:content:id:jbossorg_blog-introducing_jbpm_s_human_task_recommendation_api</id><updated>2019-10-22T16:58:22Z</updated><published>2019-10-22T16:58:00Z</published><content type="html">In this post, we’ll introduce a new jBPM API which allows for predictive models to be trained with Human Tasks (HT) data and for HT to incorporate model predictions as outputs and complete HT without user interaction.&lt;br /&gt;&lt;br /&gt;This API will allow you to add Machine Learning capabilities to your jBPM project by being able to use, for instance, models trained with historical task data to recommend the most likely output. The API also gives developers the flexibility to implement a “recommendation-only” service (which only suggests outputs) as well as automatically completing the task if the prediction’s confidence meets a user-defined prediction confidence threshold.&lt;br /&gt;This API exposes the HT handling to a &lt;i&gt;recommendation service&lt;/i&gt;.&lt;br /&gt;A recommendation service is simply any third-party class which implements the &lt;code&gt;org.kie.internal.task.api.prediction.PredictionService&lt;/code&gt; interface.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-6Qs6lgmW4Dc/Xa8gzTDUx2I/AAAAAAABJQ0/Z6EBqHxP1f0SuZXoWrpRk4UvzBSjyuFmACLcBGAsYHQ/s1600/api.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="281" data-original-width="800" height="224" src="https://1.bp.blogspot.com/-6Qs6lgmW4Dc/Xa8gzTDUx2I/AAAAAAABJQ0/Z6EBqHxP1f0SuZXoWrpRk4UvzBSjyuFmACLcBGAsYHQ/s640/api.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;This interface consists of three methods:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;getIdentifier()&lt;/code&gt; - a method which returns a unique (&lt;code&gt;String&lt;/code&gt;) identifier for your prediction service&lt;/li&gt;&lt;li&gt;&lt;code&gt;predict(Task task, Map&amp;lt;String, Object&amp;gt; inputData)&lt;/code&gt; - a method that takes task information and the task's inputs from which we will derive the model's inputs, as a map. The method returns a &lt;code&gt;PredictionOutcome&lt;/code&gt; instance, which we will look in closer detail later on&lt;/li&gt;&lt;li&gt;&lt;code&gt;train(Task task, Map&amp;lt;String, Object&amp;gt; inputData, Map&amp;lt;String, Object&amp;gt; outputData)&lt;/code&gt; - this method, similarly to predict, takes task info and the task's inputs, but now we also need to provide the task's outputs, as a map, for training&amp;nbsp; &lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;This class will consist of:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;A &lt;code&gt;Map&amp;lt;String, Object&amp;gt;&lt;/code&gt; outcome containing the prediction outputs, each entry represents an output attribute’s name and value. This map can be empty, which corresponds to the model not providing any prediction.&lt;/li&gt;&lt;li&gt;A &lt;code&gt;confidence&lt;/code&gt; value. The meaning of this field is left to the developer (&lt;i&gt;e.g.&lt;/i&gt; it could represent a probability between 0.0 and 1.0). It's relevance is related to the &lt;code&gt;confidenceThreshold&lt;/code&gt; below.&lt;/li&gt;&lt;li&gt;A &lt;code&gt;confidenceThreshold&lt;/code&gt; - this value represents the confidence cutoff after which an action can be taken by the HT item handler.&lt;/li&gt;&lt;/ul&gt;As an example, let's assume our confidence represents a prediction probability between 0.0 and 1.0. If the &lt;code&gt;confidenceThreshold&lt;/code&gt; is 0.7, that would mean that for &lt;code&gt;confidence &amp;gt; 0.7&lt;/code&gt; the HT outputs would be set to the outcome and the task automatically closed. If the &lt;code&gt;confidence &amp;lt;= 0.7&lt;/code&gt;, then the HT would set the prediction outcome as suggested values, but the task would not be closed and still need human interaction. If the outcome is empty, then the HT life cycle would proceed as if no prediction was made.&lt;br /&gt;By defining a confidence threshold which is always higher than the confidence, developers can create a “recommendation-only” service, which will assign predicted outputs to the task, but never complete it.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-DCLFhNIKzW4/Xa8ht2nGCQI/AAAAAAABJRA/c6ZyjiN5C0c5oFhU8iH1qQk7FnF7Frz2ACLcBGAsYHQ/s1600/sequence.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="403" data-original-width="800" height="322" src="https://1.bp.blogspot.com/-DCLFhNIKzW4/Xa8ht2nGCQI/AAAAAAABJRA/c6ZyjiN5C0c5oFhU8iH1qQk7FnF7Frz2ACLcBGAsYHQ/s640/sequence.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;The initial step is then, as defined above, the &lt;code&gt;predict&lt;/code&gt; step. In the scenario where the prediction's confidence is above the threshold, the task is automatically completed. If the confidence is not above the threshold, however, when the task is eventually completed both the inputs and the outputs will then be used to further train the model by calling the prediction service's &lt;code&gt;train&lt;/code&gt; method.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-YFL5vL--Zxw/Xa8iJymzMII/AAAAAAABJRI/u6-UeCFkhV41Z0iVosy1cS6m4_4UMrvwgCLcBGAsYHQ/s1600/sequence_train.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="546" data-original-width="800" height="436" src="https://1.bp.blogspot.com/-YFL5vL--Zxw/Xa8iJymzMII/AAAAAAABJRI/u6-UeCFkhV41Z0iVosy1cS6m4_4UMrvwgCLcBGAsYHQ/s640/sequence_train.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Example project&lt;/h3&gt;&lt;br /&gt;An example project is available &lt;a href="https://github.com/ruivieira/jbpm-recommendation-demo"&gt;here&lt;/a&gt;. This project consists of a single Human Task, which can be inspected using Business Central. The task is generic and simple enough in order to demonstrate the working of the jBPM's recommendation API.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-Gmzu4gvWIGg/Xa8iikBPHGI/AAAAAAABJRQ/GR4nEIylpsoYNXrQYiLOWddDIc_U6FNTQCLcBGAsYHQ/s1600/human_task.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="223" data-original-width="866" height="102" src="https://1.bp.blogspot.com/-Gmzu4gvWIGg/Xa8iikBPHGI/AAAAAAABJRQ/GR4nEIylpsoYNXrQYiLOWddDIc_U6FNTQCLcBGAsYHQ/s400/human_task.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;For the purposes of the demonstration, this task will be used to model a simple purchasing system where the purchase of a laptop of a certain brand is requested and must be, eventually, manually approved. The tasks &lt;b&gt;inputs&lt;/b&gt; are:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;item&lt;/code&gt; - a &lt;code&gt;String&lt;/code&gt; with the brand's name&lt;/li&gt;&lt;li&gt;&lt;code&gt;price&lt;/code&gt; - a &lt;code&gt;Float&lt;/code&gt; representing the laptop's price&lt;/li&gt;&lt;li&gt;&lt;code&gt;ActorId&lt;/code&gt; - a &lt;code&gt;String&lt;/code&gt; representing the user requesting the purchase&lt;br /&gt; &lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;The task provides as &lt;b&gt;outputs&lt;/b&gt;:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;approved&lt;/code&gt; - a &lt;code&gt;Boolean&lt;/code&gt; specifying whether the purchase was approved or not&lt;br /&gt; &lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;This repository contains two example recommendation service implementations as Maven modules and a REST client to populate the project with tasks to allow the predictive model training.&lt;br /&gt;&lt;br /&gt;Start by downloading, or alternatively cloning, the repository:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;$ git clone &lt;a href="mailto:git@github.com"&gt;git@github.com&lt;/a&gt;:ruivieira/jbpm-recommendation-demo.git&lt;/pre&gt;&lt;pre&gt;&amp;nbsp;&lt;/pre&gt;For this demo, two random forest-based services, one using the&lt;a href="https://github.com/haifengl/smile"&gt; SMILE&lt;/a&gt; library and another as a Predictive Model Markup Language (&lt;a href="https://en.wikipedia.org/wiki/Predictive_Model_Markup_Language"&gt;PMML&lt;/a&gt;) model, will be used. The services, located respectively in &lt;code&gt;services/jbpm-recommendation-smile-random-forest&lt;/code&gt; and &lt;code&gt;services/jbpm-recommendation-pmml-random-forest&lt;/code&gt;, can be built with (using SMILE as an example):&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;$ cd services/jbpm-recommendation-smile-random-forest&lt;br /&gt;$ mvn clean install&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;The resulting JARs files can then be included in the Business Central’s &lt;code&gt;kie-server.war&lt;/code&gt; located in &lt;code&gt;standalone/deployments&lt;/code&gt; directory of your jBPM server installation. To do this, simply create a &lt;code&gt;WEB-INF/lib&lt;/code&gt;, copy the compiled JARs into it and run&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;$ zip -r kie-server.war WEB-INF&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;The PMML-based service expects to find the PMML model in &lt;code&gt;META-INF&lt;/code&gt;, so after copying the PMML file in &lt;code&gt;jbpm-recommendation-pmml-random-forest/src/main/resources/models/random_forest.pmml&lt;/code&gt; into &lt;code&gt;META-INF&lt;/code&gt;, it should also be included in the WAR by using&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;$ zip -r kie-server.war META-INF&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;jBPM will search for a recommendation service with an identifier specified by a Java property named &lt;code&gt;org.jbpm.task.prediction.service&lt;/code&gt;. Since in our demo, the random forest service has the identifier &lt;code&gt;SMILERandomForest&lt;/code&gt;, we can set this value when starting Business Central, for instance as:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;$ ./standalone.sh -Dorg.jbpm.task.prediction.service=SMILERandomForest&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;For the purpose of this documentation we will illustrate the steps using the SMILE-based service. The PMML-based service can be used by starting Business Central and setting the property as&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;$ ./standalone.sh -Dorg.jbpm.task.prediction.service=PMMLRandomForest&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;Once Business Central has completed the startup, you can go to&lt;a href="http://localhost:8080/business-central/"&gt; http://localhost:8080/business-central/&lt;/a&gt; and login using the default admin credential &lt;code&gt;wbadmin/wbadmin&lt;/code&gt;. After choosing the default workspace (or creating your own), then select "&lt;i&gt;Import project&lt;/i&gt;" and use the project &lt;code&gt;git&lt;/code&gt; URL:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;https://github.com/ruivieira/jbpm-recommendation-demo-project.git&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;The repository also contains a REST client (under &lt;code&gt;client&lt;/code&gt;) which allows to add Human Tasks in batch in order to have sufficient data points to train the model, so that we can have meaningful recommendations.&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;NOTE: Before running the REST client, make sure that Business Central is running and the demo project is deployed and also running.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;The class &lt;code&gt;org.jbpm.recommendation.demo.RESTClient&lt;/code&gt; performs this task and can be executed from the client directory with:&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;$ mvn exec:java -Dexec.mainClass="org.jbpm.recommendation.demo.RESTClient"&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;The prices for Lenovo and Apple laptops are drawn from Normal distributions with respective means of 1500 and 2500 (pictured below). Although the recommendation service is not aware of the deterministic rules we've used to set the task outcome, it will train the model based on the data it receives. The tasks' completion will adhere to the following logic:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;The purchase of a laptop of brand Lenovo requested by user John or Mary will be approved if the price is around $1500&lt;/li&gt;&lt;li&gt;The purchase of a laptop of brand Apple requested by user John or Mary will be approved if the price is around $2500&lt;/li&gt;&lt;li&gt;The purchase of a laptop of brand Lenovo requested by user John or Mary will be rejected if the price is around $2500&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;ul&gt;&lt;/ul&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-wuM-y1CZ3_A/Xa78-qFKCQI/AAAAAAABJP0/PqsgJyqsWLko-j-qDWIDKIkNnGRdbxXiwCLcBGAsYHQ/s1600/prices.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="534" data-original-width="1600" height="209" src="https://1.bp.blogspot.com/-wuM-y1CZ3_A/Xa78-qFKCQI/AAAAAAABJP0/PqsgJyqsWLko-j-qDWIDKIkNnGRdbxXiwCLcBGAsYHQ/s640/prices.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;The client will then simulate the creation and completion of human tasks, during which the model will be trained.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;SMILE-based service&lt;/h3&gt;&lt;br /&gt;As we've seen, when creating and completing a batch of tasks (as previously) we are simultaneously training the predictive model. The service implementation is based on a random forest model a popular ensemble learning method.&lt;br /&gt;&lt;br /&gt;When running the &lt;code&gt;RESTClient&lt;/code&gt;, 1200 tasks will be created and completed to allow for a reasonably sized training dataset. The recommendation service initially has a confidence threshold of 1.0 and after a sufficiently large number (arbitrarily chosen as 1200) of observations are used for training, the confidence threshold drops to 0.75. This is simply to demonstrate the two possible actions, &lt;i&gt;i.e.&lt;/i&gt; recommendation without completing and completing the task. This also allows us to avoid any&lt;a href="https://en.wikipedia.org/wiki/Cold_start_(computing)"&gt; cold start&lt;/a&gt; problems.&lt;br /&gt;&lt;br /&gt;After the model is trained with the task from &lt;code&gt;RESTClient&lt;/code&gt;, we will now create a new Human Task.&lt;br /&gt;&lt;br /&gt;If we create a HT requesting the purchase of an "&lt;i&gt;Apple&lt;/i&gt;" laptop from "&lt;i&gt;John&lt;/i&gt;" with the price $2500, we should expect it to be approved.&lt;br /&gt;&lt;br /&gt;If fact, when claiming the task, we can see that the recommendation service recommends the purchase to be approved with a "confidence" of 91%.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-aphqvmMfkAs/Xa8i2H4jdhI/AAAAAAABJRY/ZxgXRyM3MbktAimGgjl1StXHZWi64ugswCLcBGAsYHQ/s1600/form.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="665" data-original-width="706" height="300" src="https://1.bp.blogspot.com/-aphqvmMfkAs/Xa8i2H4jdhI/AAAAAAABJRY/ZxgXRyM3MbktAimGgjl1StXHZWi64ugswCLcBGAsYHQ/s320/form.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;If he now create a task for the request of a "&lt;i&gt;Lenovo&lt;/i&gt;" laptop from "&lt;i&gt;Mary&lt;/i&gt;" with the price $1437, he would expect it to be approved. We can see that this is the case, where the form is filled in by the recommendation service with an approved status with a "confidence" of 86.5%.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-pqSLRIHEtNI/Xa8jD6QNfsI/AAAAAAABJRc/prCajKd7mh0je1ClPvtbsDOZvVB2JEvcACLcBGAsYHQ/s1600/form2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="662" data-original-width="693" height="305" src="https://1.bp.blogspot.com/-pqSLRIHEtNI/Xa8jD6QNfsI/AAAAAAABJRc/prCajKd7mh0je1ClPvtbsDOZvVB2JEvcACLcBGAsYHQ/s320/form2.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;We can also see, as expected, what happens when "&lt;i&gt;John&lt;/i&gt;" tries to order a "&lt;i&gt;Lenovo&lt;/i&gt;" for $2700. The recommendation service fills the form as "not approved" with a "confidence" of 71%.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/--77n5oCNG50/Xa8jLbsFJZI/AAAAAAABJRg/ZRmVxSufpXUqAYrxbDjc2hOUPw6N7cF5gCLcBGAsYHQ/s1600/form3.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="662" data-original-width="777" height="272" src="https://1.bp.blogspot.com/--77n5oCNG50/Xa8jLbsFJZI/AAAAAAABJRg/ZRmVxSufpXUqAYrxbDjc2hOUPw6N7cF5gCLcBGAsYHQ/s320/form3.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;In this service, the confidence threshold is set as 1.0 and as such the task was not closed automatically.&lt;br /&gt;&lt;br /&gt;The minimum number of data points was purposely chosen so that after running the REST client and completing a single task, the service will drop the confidence threshold to 0.75.&lt;br /&gt;&lt;br /&gt;If we complete one of the above tasks manually, the next task you create will be automatically completed if the confidence is above 0.75. For instance, when creating a task we are pretty sure will be approved (&lt;i&gt;e.g.&lt;/i&gt; John purchasing a Lenovo $1500) you can verify that the task is automatically completed.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;PMML-based service&lt;/h3&gt;&lt;br /&gt;The second example implementation is the PMML-based recommendation service. PMML is a predictive model interchange standard, which allows for a wide variety of models to be reused in different platforms and programming languages.&lt;br /&gt;&lt;br /&gt;The service included in this demo consists of pre-trained model (with a dataset similar to the one generated by &lt;code&gt;RESTClient&lt;/code&gt;) which is executed by a PMML engine. For this demo, the engine used was&lt;a href="https://github.com/jpmml/jpmml-evaluator"&gt; jpmml-evaluator&lt;/a&gt;, the &lt;i&gt;de facto&lt;/i&gt; reference implementation of the PMML specification.&lt;br /&gt;&lt;br /&gt;There are two main differences when comparing this service to the SMILE-based one:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;The model doesn't need the training phase. The model has been already trained and serialised into the PMML format. This means that we can start using predictions straight away from jBPM.&lt;/li&gt;&lt;li&gt;The &lt;code&gt;train&lt;/code&gt; API method is a no-op in this case. This means that whenever the service's &lt;code&gt;train&lt;/code&gt; method is called, it will not be used for training in this example (only the &lt;code&gt;predict&lt;/code&gt; method is needed for a "read-only" model), as we can see from the figure below.&lt;/li&gt;&lt;/ul&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-sANpab5vAWg/Xa8jzP6e4iI/AAAAAAABJRs/B871rX9kSsIACmwUIAZsU4YDxg7eMMfEgCLcBGAsYHQ/s1600/sequence_pmml.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="839" data-original-width="1213" height="441" src="https://1.bp.blogspot.com/-sANpab5vAWg/Xa8jzP6e4iI/AAAAAAABJRs/B871rX9kSsIACmwUIAZsU4YDxg7eMMfEgCLcBGAsYHQ/s640/sequence_pmml.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;You can verify that the Business Central workflow is the same as with the SMILE service, although in this case no training is necessary.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The above instructions on how to setup the demo project are also available in the following video (details are in the subtitles&lt;i&gt;)&lt;/i&gt;:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;iframe allowfullscreen="" class="YOUTUBE-iframe-video" data-thumbnail-src="https://i.ytimg.com/vi/bqMEPddhKkU/0.jpg" frameborder="0" height="266" src="https://www.youtube.com/embed/bqMEPddhKkU?feature=player_embedded" width="320"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;In conclusion, in this post we’ve shown how to use a new API which allows for predictive models to suggest outputs and complete Human Tasks.&lt;br /&gt;&lt;br /&gt;We’ve also shown a project which can use different recommendation service backends simply by registering them with jBPM without any changes to the project.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Why not create your own jBPM recommendation service using your favourite Machine Learning framework, today?&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;/ul&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/MIasCImfmlA" height="1" width="1" alt=""/&gt;</content><summary>In this post, we’ll introduce a new jBPM API which allows for predictive models to be trained with Human Tasks (HT) data and for HT to incorporate model predictions as outputs and complete HT without user interaction. This API will allow you to add Machine Learning capabilities to your jBPM project by being able to use, for instance, models trained with historical task data to recommend the most l...</summary><dc:creator>Rui Vieira</dc:creator><dc:date>2019-10-22T16:58:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2019/10/introducing-jbpms-human-task.html</feedburner:origLink></entry><entry><title>Jakarta EE: What’s in store for Enterprise JavaBeans?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/w1Qa84Huv1Q/" /><category term="EJB Remote" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><category term="Red Hat JBoss Enterprise Application Platform" scheme="searchisko:content:tags" /><author><name>rhsilva</name></author><id>searchisko:content:id:jbossorg_blog-jakarta_ee_what_s_in_store_for_enterprise_javabeans</id><updated>2019-10-22T07:00:49Z</updated><published>2019-10-22T07:00:49Z</published><content type="html">&lt;p&gt;&lt;a href="https://docs.oracle.com/cd/E13222_01/wls/docs100/ejb/deploy.html"&gt;Enterprise JavaBeans (EJB)&lt;/a&gt; has been very important to the Java EE ecosystem and promoted many robust solutions to enterprise problems. Besides that, in the past when integration techniques were not so advanced, EJB did great work with remote EJB, integrating many Java EE applications. However, remote EJB is not necessary anymore, and we have many techniques and tools that are better for doing that. So, does EJB still have a place in this new cloud-native world?&lt;/p&gt; &lt;p&gt;Before writing this post, I did an informal survey via &lt;a href="https://twitter.com/rhuan080/status/1175929075057274882"&gt;Twitter poll&lt;/a&gt; to hear what the community thinks about it. In this article, I&amp;#8217;ll share the results of the survey as well as some discussion that emerged as part of the poll&lt;em&gt;. &lt;/em&gt;Additionally, I&amp;#8217;ll share my opinions on the topic.&lt;span id="more-636847"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Twitter survey&lt;/h2&gt; &lt;p&gt;Here is the question I asked in the survey along with the results (from 385 respondents):&lt;/p&gt; &lt;p&gt;&lt;em&gt;We had many changes in the Java ecosystem mainly in Java enterprise. But what do you think about the EJB future? Do you think EJB has its place in this new cloud-native world? &lt;/em&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;em&gt;Yes, but needs updates &amp;#8230;..&lt;strong&gt;29%&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;No, EJB is unnecessary &amp;#8230;.&lt;strong&gt;50%&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Yes, it&amp;#8217;s very useful &amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&lt;strong&gt;17%&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Other &amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;&amp;#8230;..&lt;strong&gt;4%&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;As you can see, option 2 is the winner, and the majority of respondents think EJB is unnecessary. However, it&amp;#8217;s the winner with 50% of the vote, which means that 50% of respondents think EJB is necessary in some way or have some other opinion. That&amp;#8217;s not the only interesting thing in this survey, though; the other interesting thing was the discussion emerged from this survey about &lt;em&gt;getting the interesting features from EJB and distributing them to other specs with more affinity.&lt;/em&gt; But before we get into this discussion, I&amp;#8217;ll share my opinion and explain why I think this.&lt;/p&gt; &lt;h2&gt;My vote&lt;/h2&gt; &lt;p&gt;My vote is for option 1 (&lt;em&gt;Yes, but needs updates&lt;/em&gt;), because although EJB is an old technology, it has many features that are useful to the enterprise environment. But EJB can be sanitized to offer these features in a lighter technology. Here&amp;#8217;s a list of EJB&amp;#8217;s interesting features:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Asynchronous invocation:&lt;/strong&gt; Is useful when you want to make a non-blocking call to some method.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Stateless EJBs pool: &lt;/strong&gt;Optimizes memory use, promoting reuse of stateless EJB objects.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;@Startup to call a method at startup time: &lt;/strong&gt;Is useful when we want to execute something at startup time.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;EJB timer: &lt;/strong&gt;Is a good feature to schedule a process to execute according to some configuration.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Singleton: &lt;/strong&gt;Is useful when we want only one instance of an object to all applications. Furthermore, it has the method lock feature that is useful when we need to control concurrent access to some method.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Message-driven bean (MDB): &lt;/strong&gt;Is very useful to consume JMS queues and topics. It promotes a simple interface with a high level of abstraction to consume JMS.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Transaction management: &lt;/strong&gt;Is useful to manage transactions with databases and resources (like JMS). It promotes a high level of abstraction to work with transnational processes.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;These features are useful to the current scenario of the enterprise world, and having these features in a spec-based solution is good for the Java ecosystem. Many people have noted that Spring and other frameworks already have these features, but they are important features to have in a spec-based solution (like Jakarta EE) as well, because spec solutions are multi-vendor solutions and not coupled with a specific vendor.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;The interesting EJB features should survive, whether they have the EJB name or not. The idea of getting the interesting features from EJB and distributing them to other specs with more affinity is amazing and means we will have these important features in the Jakarta EE, but in lighter and more organized APIs. This is a good chance to evolve the Jakarta EE feature set to promote lighter, more cohesive Jakarta EE components and APIs.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#38;linkname=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F22%2Fjakarta-ee-whats-in-store-for-enterprise-javabeans%2F&amp;#038;title=Jakarta%20EE%3A%20What%E2%80%99s%20in%20store%20for%20Enterprise%20JavaBeans%3F" data-a2a-url="https://developers.redhat.com/blog/2019/10/22/jakarta-ee-whats-in-store-for-enterprise-javabeans/" data-a2a-title="Jakarta EE: What’s in store for Enterprise JavaBeans?"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/22/jakarta-ee-whats-in-store-for-enterprise-javabeans/"&gt;Jakarta EE: What&amp;#8217;s in store for Enterprise JavaBeans?&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/w1Qa84Huv1Q" height="1" width="1" alt=""/&gt;</content><summary>Enterprise JavaBeans (EJB) has been very important to the Java EE ecosystem and promoted many robust solutions to enterprise problems. Besides that, in the past when integration techniques were not so advanced, EJB did great work with remote EJB, integrating many Java EE applications. However, remote EJB is not necessary anymore, and we have many techniques and tools that are better for doing that...</summary><dc:creator>rhsilva</dc:creator><dc:date>2019-10-22T07:00:49Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/22/jakarta-ee-whats-in-store-for-enterprise-javabeans/</feedburner:origLink></entry><entry><title>.NET Core 3.0 for Red Hat Enterprise Linux 7 now available</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/md-52msxjlk/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term=".NET Core 3.0" scheme="searchisko:content:tags" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><author><name>Bob Davis</name></author><id>searchisko:content:id:jbossorg_blog-net_core_3_0_for_red_hat_enterprise_linux_7_now_available</id><updated>2019-10-21T15:41:13Z</updated><published>2019-10-21T15:41:13Z</published><content type="html">&lt;p&gt;We are very excited to announce the general availability of .NET Core 3.0 for Red Hat Enterprise Linux 7! .NET Core is the open source, cross-platform .NET platform for &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;building microservices&lt;/a&gt;. .NET Core is designed to provide the best performance at scale for applications that use microservices and &lt;a href="https://developers.redhat.com/topics/containers/"&gt;containers&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;.NET Core 3.0 is available today on Red Hat Enterprise Linux 7 via “yum” in the /dotnet repo, and in container images from the &lt;a href="https://access.redhat.com/containers/#/search/dotnet"&gt;Red Hat Container Container Catalog&lt;/a&gt;. Availability for Red Hat Enterprise Linux 8 will come with the release of RHEL 8.1 in Application Streams.&lt;span id="more-637017"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;.NET Core 3.0 continues to broaden its support and tools for application development in an open source environment. The latest version of .NET Core includes the following improvements:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Support for C# 8.0, f# 4.7&lt;/li&gt; &lt;li&gt;Support for building Windows desktop applications&lt;/li&gt; &lt;li&gt;Supports netstandard2.1&lt;/li&gt; &lt;li&gt;Native executables for framework-dependent applications&lt;/li&gt; &lt;li&gt;Single-file executables&lt;/li&gt; &lt;li&gt;Trimming applications on publish&lt;/li&gt; &lt;li&gt;Ahead-of-time (AOT) compiled applications&lt;/li&gt; &lt;li&gt;Improved support for containers with low-memory allocation&lt;/li&gt; &lt;li&gt;Fast, built-in JSON support&lt;/li&gt; &lt;li&gt;HTTP/2 support in HttpClient&lt;/li&gt; &lt;li&gt;TPS 1.3 support on Linux systems with OpenSSL 1.1.1&lt;/li&gt; &lt;li&gt;Support for building client-side web apps using Blazor&lt;/li&gt; &lt;li&gt;Create high-performance backend services with gRPC&lt;/li&gt; &lt;li&gt;HTTP/2 enabled by default in Kestrel&lt;/li&gt; &lt;li&gt;Authentication support integration with &lt;a href="https://identityserver.io/"&gt;IdentityServer&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Release and support information&lt;/h2&gt; &lt;p&gt;Developers may use .NET Core 3.0 to develop and deploy applications on:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Red Hat Enterprise Linux&lt;/li&gt; &lt;li&gt;Red Hat Enterprise Linux Atomic Host&lt;/li&gt; &lt;li&gt;Red Hat OpenShift Container Platform&lt;/li&gt; &lt;li&gt;Red Hat OpenShift Online&lt;/li&gt; &lt;li&gt;Red Hat OpenShift Dedicated&lt;/li&gt; &lt;li&gt;Red Hat OpenStack Platform&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;.NET Core 3.0 is a current release, &lt;a href="https://access.redhat.com/support/policy/updates/net-core"&gt;as outlined in our lifecycle documentation&lt;/a&gt;. .NET Core 3.1 will be a long-term supported release. We recommend that you adopt .NET Core 3.0. It will be easy to upgrade from .NET Core 3.0. .NET Core 2.2 (the previous &lt;i&gt;current&lt;/i&gt; release) will be supported through December 23, 2019.&lt;/p&gt; &lt;p&gt;For more information, please visit the following:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/net_core/3.0/html-single/getting_started_guide/index"&gt;Get Started with .NET Core 3.0&lt;/a&gt;!&lt;/li&gt; &lt;li&gt;Visit &lt;a href="http://www.redhatloves.net/"&gt;RedHatLoves.NET&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The Red Hat Developer Program &lt;a href="https://developers.redhat.com/products/dotnet/overview/"&gt;technology page on .NET Core&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/category/programming/dot-net/"&gt;Red Hat Developer blogs&lt;/a&gt; on .NET Core&lt;/li&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/net_core/3.0/html-single/release_notes_for_rpms/index"&gt;Product Documentation for .NET Core&lt;/a&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;For complete information on the updates and changes made in this release, please visit the &lt;a href="https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.0/3.0.0.md"&gt;project page on GitHub&lt;/a&gt;. Any important differences between Red Hat’s official source build and other builds that are available will be &lt;a href="https://developers.redhat.com/products/dotnet/docs-and-apis/"&gt;detailed in our release notes&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#38;linkname=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Fnet-core-3-0-for-red-hat-enterprise-linux-7-now-available%2F&amp;#038;title=.NET%20Core%203.0%20for%20Red%20Hat%20Enterprise%20Linux%207%20now%20available" data-a2a-url="https://developers.redhat.com/blog/2019/10/21/net-core-3-0-for-red-hat-enterprise-linux-7-now-available/" data-a2a-title=".NET Core 3.0 for Red Hat Enterprise Linux 7 now available"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/21/net-core-3-0-for-red-hat-enterprise-linux-7-now-available/"&gt;.NET Core 3.0 for Red Hat Enterprise Linux 7 now available&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/md-52msxjlk" height="1" width="1" alt=""/&gt;</content><summary>We are very excited to announce the general availability of .NET Core 3.0 for Red Hat Enterprise Linux 7! .NET Core is the open source, cross-platform .NET platform for building microservices. .NET Core is designed to provide the best performance at scale for applications that use microservices and containers. .NET Core 3.0 is available today on Red Hat Enterprise Linux 7 via “yum” in the /dotnet ...</summary><dc:creator>Bob Davis</dc:creator><dc:date>2019-10-21T15:41:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/21/net-core-3-0-for-red-hat-enterprise-linux-7-now-available/</feedburner:origLink></entry><entry><title>3 steps toward improving container security</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OH0z1FD1tMI/" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="security" scheme="searchisko:content:tags" /><author><name>David Strom</name></author><id>searchisko:content:id:jbossorg_blog-3_steps_toward_improving_container_security</id><updated>2019-10-21T07:00:12Z</updated><published>2019-10-21T07:00:12Z</published><content type="html">&lt;p&gt;As developers increasingly make use of containers, securing them becomes more and more important. Gartner has named &lt;a href="https://www.csoonline.com/article/3268922/why-securing-containers-and-microservices-is-a-challenge.html"&gt;container security&lt;/a&gt; one of its &lt;a href="https://www.gartner.com/doc/3900996/top--security-projects-"&gt;top 10 concerns for this year&lt;/a&gt; in this report, which isn’t surprising given their popularity in producing lightweight and reusable code and lowering app dev costs.&lt;/p&gt; &lt;p&gt;In this article, I’ll look at the three basic steps involved in container security: securing the build environment, securing the underlying container hosts, and securing the actual content that runs inside each container. To be successful at mastering container security means paying attention to all three of these elements. &lt;span id="more-639107"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;If you step back a moment, container security isn’t all that different from ordinary application security. If you replace the appropriate words in the above paragraph, you could have written this post 10, 20, or even 30 years ago with a few other modifications. But containers do have a few oddities and new twists that are worth highlighting. To get started, I suggest &lt;a href="https://developers.redhat.com/blog/2018/12/19/security-considerations-for-container-runtimes/"&gt;you listen to the recorded talk by Red Hat’s Dan Walsh about general container security considerations&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;1. Securing the build environment&lt;/h2&gt; &lt;p&gt;Let’s start with securing the build environment itself. As with any app dev process, adding security at the beginning of a project makes the most sense, rather than having to bolt something on after most of the code has been written. Using the right methods from the start increases your effectiveness as a programmer and makes for a smoother application development process.&lt;/p&gt; &lt;p&gt;This first component has three separate pieces of its own: First, you need to&lt;b&gt; understand your DevOps workflows.&lt;/b&gt; This includes how you construct your containers, where you obtain their code, and how often the underlying code changes. One of the attractions of containers is their “just-in-time” aspects, where you can pull code from a variety of online sources. How do you know that this code has been properly vetted for general use, and then how do you know that your own particular DevOps process isn’t introducing some specific corner case that will open up a backdoor? That should be your focus in these workflow exercises.&lt;/p&gt; &lt;p&gt;Part of securing your workflow is being able to use discovery tools (e.g., Red Hat’s Quay.io) to ensure that the containers are managed securely and scale up properly. This tool automatically scans each container for security vulnerabilities. &lt;a href="https://developers.redhat.com/blog/2019/06/26/using-quay-io-to-find-vulnerabilities-in-your-container-images/"&gt;This article walks you through how to use Quay&lt;/a&gt; and what to expect.&lt;/p&gt; &lt;p&gt;The second situation involves &lt;b&gt;examining your access rules and permissions for both users and the actual apps themselves&lt;/b&gt;. If you track security breaches, you will realize this is a common theme just among ordinary SaaS apps. How many unsecured web services storage containers have been leaked online, thanks to no actual password or “access all” permissions that haven’t been locked down? Far too many, and this can be true in the container world, where the number of apps can be overwhelming.&lt;/p&gt; &lt;p&gt;One must-do item is to &lt;strong&gt;examine the level of granularity you’ll need for the appropriate access controls&lt;/strong&gt;, both in terms of delivering the right levels of security for your apps as well as for the ultimate users. Do you know which portions of your code have root-level access? How about which portions &lt;strong&gt;actually need&lt;/strong&gt; root-level access? The different answers could mean a more or less secure container, and the optimum answer is as few as possible, approaching zero. If you use LDAP for your ordinary user and app access controls, you &lt;a href="https://developers.redhat.com/blog/2019/08/02/how-to-configure-ldap-user-authentication-and-rbac-in-red-hat-openshift-3-11/"&gt;might want to review the suggestions in this article about how to validate LDAP parameters&lt;/a&gt; and enable LDAP authentication in &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Finally, with hardening your build environment there is the &lt;b&gt;ability to use runtime protection&lt;/b&gt;. Like the tools for ordinary apps, some of these tools focus on static scans, while others offer continuous integration using your chosen development environment. The continuous method is better, given the dynamic nature of container code, and it could also be a major time saver when you have to perform an app audit. A good runtime protection container tool should be able to flag abnormal behavior, remediate potential threats, and isolate peculiar events for further forensic analysis.&lt;/p&gt; &lt;h2&gt;2. Securing the underlying container hosts&lt;/h2&gt; &lt;p&gt;Once your build environment is secure, the next step is to harden the underlying hosts that run the container servers and services. Take a closer look at what your container provider offers in the way of security. These options may be part of the native Linux container and OpenShift security features, such as policies to prevent abuse of resources, setting up access control groups, and ensuring that you remove root access everywhere, or at least where it isn’t really needed. Many are the same familiar security practices that are part of the virtual machine world, so they shouldn’t come as a surprise. They just have a slightly different context from what you might have been used to before getting involved with containers. One recommended best practice, for example, is to only run containers with read-only images.&lt;/p&gt; &lt;h2&gt;3. Securing the content that runs inside each container&lt;/h2&gt; &lt;p&gt;The final step is to secure the content that is inside the containers. This isn&amp;#8217;t really all that different from securing ordinary apps but it does have a few oddities. You should limit the various Linux OS features that are running within your container, for example. Linux has a general-purpose, OS-level security screening tool called &lt;a href="https://lwn.net/Articles/656307/"&gt;seccomp that is worth reviewing as well&lt;/a&gt;. You should also enforce image source integrity protection so you can track what content has changed in your containers and know who was responsible.&lt;/p&gt; &lt;p&gt;I realize this is a lot of work, and moreover the work will involve getting familiar with multiple tools and multiple application and container and OS constructs, too. A good place to start is to examine the numerous third-party container security tools. Some of these are available from open source vendors and others from commercial vendors that can also assist in your security journey.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#38;linkname=3%20steps%20toward%20improving%20container%20security" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2F3-steps-toward-improving-container-security%2F&amp;#038;title=3%20steps%20toward%20improving%20container%20security" data-a2a-url="https://developers.redhat.com/blog/2019/10/21/3-steps-toward-improving-container-security/" data-a2a-title="3 steps toward improving container security"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/21/3-steps-toward-improving-container-security/"&gt;3 steps toward improving container security&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OH0z1FD1tMI" height="1" width="1" alt=""/&gt;</content><summary>As developers increasingly make use of containers, securing them becomes more and more important. Gartner has named container security one of its top 10 concerns for this year in this report, which isn’t surprising given their popularity in producing lightweight and reusable code and lowering app dev costs. In this article, I’ll look at the three basic steps involved in container security: securin...</summary><dc:creator>David Strom</dc:creator><dc:date>2019-10-21T07:00:12Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/21/3-steps-toward-improving-container-security/</feedburner:origLink></entry><entry><title>Eclipse Vert.x 3.8.1 update for Red Hat Runtimes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/lC4uHOe-u1Q/" /><category term="Eclipse Vert.x" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="reactive programming" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Application Runtimes" scheme="searchisko:content:tags" /><author><name>Syed M Shaaf</name></author><id>searchisko:content:id:jbossorg_blog-eclipse_vert_x_3_8_1_update_for_red_hat_runtimes</id><updated>2019-10-21T06:59:57Z</updated><published>2019-10-21T06:59:57Z</published><content type="html">&lt;p&gt;The latest update to Red Hat Runtimes has arrived and now supports Eclipse Vert.x 3.8.1.&lt;/p&gt; &lt;p&gt;Red Hat Runtimes provides application developers with a variety of application runtimes and enables them to run on the &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://developers.redhat.com/openshift/" target="_blank" rel="noopener noreferrer"&gt;Red Hat OpenShift Container Platform&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s new?&lt;/h2&gt; &lt;p&gt;With this update, some of the new additions and updates include:&lt;span id="more-638037"&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Vert.x Web API Contract&lt;/strong&gt; extends Vert.x Web to support &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://www.openapis.org/" target="_blank" rel="noopener noreferrer"&gt;OpenAPI 3&lt;/a&gt;, bringing you a simple interface to build your Vert.x router and add security and validation handlers. Now you can define your API with OpenAPI and use them directly into your Vert.x code. Its a powerful feature for not just API first driven development but also to harness the Vert.x non-blocking API to build robust and high-performance backends.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Vert.x SQL client&lt;/strong&gt; &lt;ul&gt; &lt;li class="ql-indent-1"&gt;The client is the evolution of the legendary &lt;em&gt;Reactive PostgreSQL Client&lt;/em&gt; and provides &lt;ul&gt; &lt;li class="ql-indent-2"&gt;The Reactive PostgreSQL Client&lt;/li&gt; &lt;li class="ql-indent-2"&gt;The Reactive MySQL Client&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li class="ql-indent-1"&gt;These implementations offer high-performance non-blocking access to PostgreSQL and MySQL.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Vert.x Mail client &lt;/strong&gt;&lt;/li&gt; &lt;li&gt;The client enables a few additional auth methods like DIGEST-MD5, TLS, and SSL and is completely asynchronous. The client also allows connection pooling to keep connections open and reuse.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Openshift Container Platform&lt;/strong&gt;: Also, this latest release is verified on OCP 4.1 and support for OCP 4.2 will be included soon after it is available.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Documentation&lt;/h2&gt; &lt;p&gt;For more details, take a look at the supported configurations and component details&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Red Hat Runtimes Eclipse Vert.x Supported &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://access.redhat.com/articles/3985941" target="_blank" rel="noopener noreferrer"&gt;Configurations&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Red Hat Runtimes Eclipse Vert.x 3.8.1 &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://access.redhat.com/articles/4486451" target="_blank" rel="noopener noreferrer"&gt;Component Details&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you are new to the Eclipse Vert.x and would like to learn more, go to our live learning portal for a guided &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://learn.openshift.com/middleware/courses/middleware-vertx/" target="_blank" rel="noopener noreferrer"&gt;tutorial&lt;/a&gt; or the &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://docs.redhat.com/" target="_blank" rel="noopener noreferrer"&gt;documentation&lt;/a&gt; for details.&lt;/p&gt; &lt;h2&gt;Developer interactive learning scenarios&lt;/h2&gt; &lt;p&gt;These &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://learn.openshift.com/middleware/courses/middleware-vertx/" target="_blank" rel="noopener noreferrer"&gt;self-paced scenarios&lt;/a&gt; provide you with a preconfigured Red Hat OpenShift instance, accessible from your browser without any downloads or configuration. Use it to learn and experiment with Vert.x or learn about other technologies within Red Hat Runtimes and see how it helps solve real-world problems.&lt;/p&gt; &lt;h2&gt;Getting support for Eclipse Vert.x&lt;/h2&gt; &lt;p&gt;Support for Eclipse Vert.x is available to Red Hat customers through a subscription to &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://www.redhat.com/en/products/runtimes" target="_blank" rel="noopener noreferrer"&gt;Red Hat Runtimes&lt;/a&gt;. Contact your local Red Hat representative or &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://www.redhat.com/en/about/contact/sales" target="_blank" rel="noopener noreferrer"&gt;Red Hat Sales&lt;/a&gt; for details on how you can enjoy the world-class support offered by Red Hat and its worldwide partner network.&lt;/p&gt; &lt;p&gt;Moving forward, customers can expect support for Eclipse Vert.x and other runtimes according to the &lt;a class="_e75a791d-denali-editor-page-rtfLink" href="https://access.redhat.com/support/policy/updates/jboss_notes/" target="_blank" rel="noopener noreferrer"&gt;Red Hat Product Update and Support Lifecycle&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;The people behind Red Hat’s Runtimes and Eclipse Vert.x support&lt;/h3&gt; &lt;p&gt;This offering was produced by Red Hat’s Runtimes product and engineering team along with the &lt;a href="https://vertx.io/"&gt;Eclipse Vert.x&lt;/a&gt; upstream community, and involved many hours of development, testing, documentation writing, testing some more, and working with the wider Red Hat community of customers, partners, and Vert.x developers to incorporate contributions, both big and small. We are glad you have chosen to use it and hope that it meets or exceeds your expectations!&lt;/p&gt; &lt;h3&gt;More about Red Hat Runtimes&lt;/h3&gt; &lt;p&gt;&lt;a href="https://www.redhat.com/en/products/runtimes"&gt;Red Hat Runtimes&lt;/a&gt; provides a set of comprehensive frameworks, runtimes, and programming languages for developers, architects, and IT leaders with cloud-native application development needs. It is designed to accelerate the development and delivery of business solutions. The following are the different runtimes and enablers for you to create your microservices with Red Hat Runtimes. Head over to this &lt;a href="https://www.redhat.com/en/products/runtimes"&gt;link&lt;/a&gt; for more details.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone wp-image-641327 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-15-at-22.51.29-1024x475.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-15-at-22.51.29-300x139.png" alt="" width="870" height="403" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-15-at-22.51.29-300x139.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-15-at-22.51.29-768x357.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/10/Screenshot-2019-10-15-at-22.51.29-1024x475.png 1024w" sizes="(max-width: 870px) 100vw, 870px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#38;linkname=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F21%2Feclipse-vert-x-3-8-1-update-for-red-hat-runtimes%2F&amp;#038;title=Eclipse%20Vert.x%203.8.1%20update%20for%20Red%20Hat%20Runtimes" data-a2a-url="https://developers.redhat.com/blog/2019/10/21/eclipse-vert-x-3-8-1-update-for-red-hat-runtimes/" data-a2a-title="Eclipse Vert.x 3.8.1 update for Red Hat Runtimes"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/21/eclipse-vert-x-3-8-1-update-for-red-hat-runtimes/"&gt;Eclipse Vert.x 3.8.1 update for Red Hat Runtimes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/lC4uHOe-u1Q" height="1" width="1" alt=""/&gt;</content><summary>The latest update to Red Hat Runtimes has arrived and now supports Eclipse Vert.x 3.8.1. Red Hat Runtimes provides application developers with a variety of application runtimes and enables them to run on the Red Hat OpenShift Container Platform. What’s new? With this update, some of the new additions and updates include: Vert.x Web API Contract extends Vert.x Web to support OpenAPI 3, bringing you...</summary><dc:creator>Syed M Shaaf</dc:creator><dc:date>2019-10-21T06:59:57Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/21/eclipse-vert-x-3-8-1-update-for-red-hat-runtimes/</feedburner:origLink></entry><entry><title>Extend C++ capabilities with LLVM STLExtras.h</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Ez-quzscw6s/" /><category term="C++" scheme="searchisko:content:tags" /><category term="Clang/LLVM" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><author><name>Jan Kratochvil</name></author><id>searchisko:content:id:jbossorg_blog-extend_c_capabilities_with_llvm_stlextras_h</id><updated>2019-10-18T07:00:29Z</updated><published>2019-10-18T07:00:29Z</published><content type="html">&lt;p&gt;The &lt;a href="https://llvm.org/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://llvm.org/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGy1QndY4UmIYMP-47-JCDe0FJcNQ"&gt;LLVM compiler project&lt;/a&gt; provides a &lt;a href="https://github.com/llvm-mirror/llvm/blob/master/include/llvm/ADT/STLExtras.h" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/master/include/llvm/ADT/STLExtras.h&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFCA_oggXUkXnzRlZVNJgud7-R9XA"&gt;header file called STLExtras.h&lt;/a&gt; that extends the capabilities of C++ without any dependency on the rest of LLVM. In this article, we take a quick look at its basic functionality.&lt;span id="more-639587"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;LLVM STLExtras.h&lt;/h2&gt; &lt;p&gt;For the &lt;code&gt;/usr/include/llvm/ADT/STLExtras.h&lt;/code&gt; file, you need to install:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Fedora: &lt;code&gt;dnf install llvm-devel&lt;/code&gt;&lt;/li&gt; &lt;li&gt;RHEL-8: &lt;code&gt;yum install llvm-devel&lt;/code&gt;&lt;/li&gt; &lt;li&gt;RHEL-7/8 with &lt;a href="https://developers.redhat.com/HW/ClangLLVM-RHEL-7/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://developers.redhat.com/HW/ClangLLVM-RHEL-7/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFl8pCz2sRfZS0pi9pww75BDtXsbw"&gt;LLVM toolset 7.0&lt;/a&gt;: &lt;code&gt;yum install llvm-toolset-7.0-{clang,llvm-devel};scl enable llvm-toolset-7.0 -- clang++ -I$(scl enable llvm-toolset-7.0 -- llvm-config --includedir) -std=c++17 ...&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;llvm::reverse&lt;/h2&gt; &lt;p&gt;= reverse range-based for loop&lt;/p&gt; &lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/C%2B%2B11" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://en.wikipedia.org/wiki/C%252B%252B11&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHE0u7b18Ycy_XBKMVpUmy_T7K2MA"&gt;C++11&lt;/a&gt; brought &lt;a href="https://en.cppreference.com/w/cpp/language/range-for" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://en.cppreference.com/w/cpp/language/range-for&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNE1LrneBrh6byiNYcQeV7h8GIIJZw"&gt;range-based for loops&lt;/a&gt;. We no longer have to deal with iterators in the most common cases.&lt;/p&gt; &lt;p&gt;See also &lt;a href="https://godbolt.org/z/GgIB-R" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://godbolt.org/z/GgIB-R&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFfhkHXHP2Ex29rlgCzfiy0YeUodg"&gt;online compiler sample code.&lt;/a&gt;&lt;/p&gt; &lt;pre&gt; std::vector&lt;u&gt;&lt;/u&gt; vec{1, 2, 3, 4}; // C++11 initializer list // C++98 iterator: 1 2 3 4 for (std::vector&lt;u&gt;&lt;/u&gt;::iterator it = vec.begin(); it != vec.end(); ++it) std::cout &amp;#60;&amp;#60; *it; // C++11 range-based for loop: 1 2 3 4 for (int i : vec) std::cout &amp;#60;&amp;#60; i; &lt;/pre&gt; &lt;p&gt;Except&amp;#8230; when we need to iterate in the opposite way. C++11 somehow forgot about that. Here comes LLVM with its &lt;a href="https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h#L273" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h%23L273&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGYDyvzBn0Ogb1Us1lVGIlsqYfXRg"&gt;llvm::reverse&lt;/a&gt; container adapter.&lt;/p&gt; &lt;p&gt;See also &lt;a href="https://godbolt.org/z/TX59Jv" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://godbolt.org/z/TX59Jv&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFtm7gjJtJ4WCILJ8dpItFKTd4IwA"&gt;online compiler sample code.&lt;/a&gt;&lt;/p&gt; &lt;pre&gt; std::vector&lt;u&gt;&lt;/u&gt; vec{1, 2, 3, 4}; // Reverse range-based for loop - llvm::reverse: 4 3 2 1 for (int i : llvm::reverse(vec)) std::cout &amp;#60;&amp;#60; i; } &lt;/pre&gt; &lt;h2&gt;Range-based algorithms&lt;/h2&gt; &lt;p&gt;= &lt;code&gt;vec.begin(),vec.end()&lt;/code&gt; → &lt;code&gt;vec&lt;/code&gt;&lt;/p&gt; &lt;p&gt;It&amp;#8217;s a bit annoying to always write both &lt;code&gt;begin()&lt;/code&gt; and &lt;code&gt;end()&lt;/code&gt; for container algorithms, right?&lt;/p&gt; &lt;pre&gt; std::vector&lt;u&gt;&lt;/u&gt; vec{1, 2, 3, 4}; std::sort(vec.begin(),vec.end()); // or: std::sort(vec.begin(),vec.end(), std::greater&lt;u&gt;&lt;/u&gt;()); &lt;/pre&gt; &lt;p&gt;The problem is solved already; it really is that simple:&lt;/p&gt; &lt;pre&gt;#define LLVM_DISABLE_ABI_BREAKING_CHECKS_ENFORCING 1 // no LLVM libraries needed #include &amp;#60;llvm/ADT/STLExtras.h&amp;#62; std::vector&lt;u&gt;&lt;/u&gt; vec{1, 2, 3, 4}; llvm::sort(vec); // or: llvm::sort(vec, std::greater&lt;u&gt;&lt;/u&gt;()); &lt;/pre&gt; &lt;p&gt;It applies to all the C++ algorithms: ­&lt;a href="http://www.cplusplus.com/reference/algorithm/sort/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/sort/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNE34qqxtdZxZCkRjtCIoykhcgLIhg"&gt;std::sort&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/for_each/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/for_each/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHMEDxCzGvNIGnlxZ--BEXeDIxCKw"&gt;std::for_each&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/all_of/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/all_of/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFwZrw3iXvWmCu15vLmf7Go5O5s4g"&gt;std::all_of&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/any_of/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/any_of/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFqk66h8hbXzieTbaoDcK-uF862ug"&gt;std::any_of&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/none_of/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/none_of/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHAWgXrOEDF35MOpCSFtOaZK_EcOA"&gt;std::none_of&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/find/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/find/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHIiJKe0MuM8PdHfh64ZFb6M6tmQw"&gt;std::find&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/find_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/find_if/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGBWpLvsN41KvbdXr7iuJMRIs5eTg"&gt;std::find_if&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/find_if_not/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/find_if_not/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHlIAiuyR-bDpaMKlsCVYP1aaAysQ"&gt;std::find_if_not&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/remove_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/remove_if/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFW_EvNP43yygHH4XEvd_1Ex4lsdQ"&gt;std::remove_if&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/copy_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/copy_if/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHFqqU28JjWZ87HAqyEcQRaNrb8Iw"&gt;std::copy_if&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/copy/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/copy/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFhSIxPYNTOa4k6b6BL5Q5Yb95ZwA"&gt;std::copy&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/count/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/count/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNE21v3xHZ2bfJolTEjLZJeDQCtwoA"&gt;std::count&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/count_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/count_if/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGVV4MBWrjaIeEDZpn4KruLGOa0vg"&gt;std::count_if&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/transform/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/transform/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNE926KuJ_XL2LYBXuOFxcy2FwNwDg"&gt;std::transform&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/partition/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/partition/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGz3VpxkIa3mL5aVuNxFgAoWylhVg"&gt;std::partition&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/lower_bound/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/lower_bound/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNHEvwxkwo305YahXmyIVxUdqZYK_w"&gt;std::lower_bound&lt;/a&gt; ­&lt;a href="http://www.cplusplus.com/reference/algorithm/upper_bound/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/upper_bound/&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNG__RZcYrmNBIwx9qIMX8agt65L_g"&gt;std::upper_bound&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It is &lt;a href="https://en.cppreference.com/w/cpp/experimental/ranges" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://en.cppreference.com/w/cpp/experimental/ranges&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNFKpx1k5TvxJPTr24jt_Ym-3e2kjQ"&gt;expected as &lt;code&gt;std::ranges::&lt;/code&gt; in C++20&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Additionally, it provides:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h#L1221" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h%23L1221&amp;#38;source=gmail&amp;#38;ust=1570827711938000&amp;#38;usg=AFQjCNGR1Ip99rGfRx9nhhNs3xn3K5pVTQ"&gt;is_contained&lt;/a&gt; = &lt;a href="http://www.cplusplus.com/reference/algorithm/find/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/find/&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNEHoVLEYXKATRPYVBIpw9iO8bvx7A"&gt;std::find&lt;/a&gt; with a &lt;code&gt;bool&lt;/code&gt; result&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h#L1306" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h%23L1306&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNHaIWq7In18keXsR6gCypKVUdohdw"&gt;is_splat &lt;/a&gt;= return a &lt;code&gt;bool&lt;/code&gt; whether all elements in a container are the same&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h#L1324" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://github.com/llvm-mirror/llvm/blob/cc0761d47c40e6b793b937d8af5c9bb517b5b7ba/include/llvm/ADT/STLExtras.h%23L1324&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNGA5weBR4Frb3Sy25nU0gbvWhgM4w"&gt;erase_if &lt;/a&gt;= &lt;a href="http://www.cplusplus.com/reference/algorithm/remove_if/" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=http://www.cplusplus.com/reference/algorithm/remove_if/&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNF-HAt98oOYfToCDvn7UbeSk7F-nQ"&gt;std::remove_if&lt;/a&gt; with more convient calling (&lt;a href="https://en.cppreference.com/w/cpp/experimental/lib_extensions_2#Uniform_container_erasure" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://en.cppreference.com/w/cpp/experimental/lib_extensions_2%23Uniform_container_erasure&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNGuxOhCSfInUNvsiGXzRG1-0jZCjA"&gt;expected in C++20&lt;/a&gt;)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;See also &lt;a href="https://godbolt.org/z/_WIEsA" target="_blank" rel="noopener noreferrer" data-saferedirecturl="https://www.google.com/url?q=https://godbolt.org/z/_WIEsA&amp;#38;source=gmail&amp;#38;ust=1570827711939000&amp;#38;usg=AFQjCNExAK3kk002i0Tpv_swDxl6K1s6Gg"&gt;online compiler sample code.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#38;linkname=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F18%2Fextend-c-capabilities-with-llvm-stlextras-h%2F&amp;#038;title=Extend%20C%2B%2B%20capabilities%20with%20LLVM%20STLExtras.h" data-a2a-url="https://developers.redhat.com/blog/2019/10/18/extend-c-capabilities-with-llvm-stlextras-h/" data-a2a-title="Extend C++ capabilities with LLVM STLExtras.h"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/18/extend-c-capabilities-with-llvm-stlextras-h/"&gt;Extend C++ capabilities with LLVM STLExtras.h&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Ez-quzscw6s" height="1" width="1" alt=""/&gt;</content><summary>The LLVM compiler project provides a header file called STLExtras.h that extends the capabilities of C++ without any dependency on the rest of LLVM. In this article, we take a quick look at its basic functionality. LLVM STLExtras.h For the /usr/include/llvm/ADT/STLExtras.h file, you need to install: Fedora: dnf install llvm-devel RHEL-8: yum install llvm-devel RHEL-7/8 with LLVM toolset 7.0: yum i...</summary><dc:creator>Jan Kratochvil</dc:creator><dc:date>2019-10-18T07:00:29Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/18/extend-c-capabilities-with-llvm-stlextras-h/</feedburner:origLink></entry><entry><title>New features in .NET Core 3.0 on Linux</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zAmbhMOnfM4/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="linux" scheme="searchisko:content:tags" /><author><name>Tom Deseyn</name></author><id>searchisko:content:id:jbossorg_blog-new_features_in_net_core_3_0_on_linux</id><updated>2019-10-17T07:05:31Z</updated><published>2019-10-17T07:05:31Z</published><content type="html">&lt;p&gt;.NET Core 3.0 brings many exciting &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0"&gt;new features&lt;/a&gt;, including a &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8"&gt;new major release of C#&lt;/a&gt;, &lt;a href="https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/"&gt;improved performance&lt;/a&gt; and support for &lt;a href="https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-1-and-open-sourcing-windows-desktop-frameworks/"&gt;building Windows desktop applications&lt;/a&gt; (on Windows). In this article, we’ll look at interesting new features for Linux and Linux container users.&lt;span id="more-629907"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Faster and smaller SDK&lt;/h3&gt; &lt;p&gt;The SDK is smaller and faster. Previous versions of .NET Core used NuGet packages when building an application. These NuGet packages contained both reference assemblies (describing the API) and implementation assemblies. .NET Core 3.0 uses references packs that come with the SDK. Because these packs don’t include an implementation, they are smaller than the NuGet packages. This makes the SDK smaller (in case NuGet packages were included with the SDK) or faster (in case NuGet packages had to be downloaded from nuget.org).&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/dotnet/source-build/"&gt;Source build .NET Core&lt;/a&gt; (like on Red Hat Enterprise Linux, Red Hat OpenShift, and &lt;a href="https://fedoraloves.net/"&gt;Fedora .NET SIG&lt;/a&gt;) now includes the ASP.NET Core framework. This reduces time to build ASP.NET Core applications (no more nuget.org downloads), speeds up these applications (AOT compilation), and provides security fixes via package update (instead of having to rebuild the application).&lt;/p&gt; &lt;h3&gt;Framework-dependent executables, single file publish, trimming&lt;/h3&gt; &lt;p&gt;With previous versions, a native executable was only included when publishing a self-contained application. Now, a native executable is also included with framework-dependent applications:&lt;/p&gt; &lt;pre&gt;$ dotnet new console -o console $ cd console $ dotnet publish $ bin/Debug/netcoreapp3.0/publish/console Hello World! &lt;/pre&gt; &lt;p&gt;By default, this native executable is for the platform you are running on. It’s possible to build a native executable for a different platform (like Windows) by specifying a runtime id (&lt;code&gt;-r&lt;/code&gt;).&lt;/p&gt; &lt;pre&gt;$ dotnet publish -r win-x64 --no-self-contained $ ls /tmp/console3/bin/Debug/netcoreapp3.0/win-x64/publish/ console3.deps.json console3.dll console3.exe console3.pdb console3.runtimeconfig.json &lt;/pre&gt; &lt;p&gt;Note that we’re passing the &lt;code&gt;--no-self-contained&lt;/code&gt; flag in order to build a framework-dependent application. Without it, the application would be self-contained (which means it includes the runtime).&lt;/p&gt; &lt;p&gt;If you want a native executable that works across a range of Linux distributions, you can specify &lt;code&gt;linux-x64&lt;/code&gt; as the rid. This executable depends on the GNU C library, which is used on many distributions (including Fedora and RHEL). If your executable is for a musl-based distribution, like Alpine, you can specify the &lt;code&gt;linux-musl-x64&lt;/code&gt; rid.&lt;/p&gt; &lt;p&gt;Both self-contained and framework-dependent application support packing the application into a single native executable. To do this, you can set the &lt;code&gt;PublishSingleFile&lt;/code&gt; property.&lt;/p&gt; &lt;pre&gt;$ dotnet publish -r win-x64 /p:PublishSingleFile=true $ ls -lh bin/Debug/netcoreapp3.0/win-x64/publish/*.exe -rwxrw-r--. 1 tmds tmds 66M Sep 13 09:08 bin/Debug/netcoreapp3.0/win-x64/publish/console.exe &lt;/pre&gt; &lt;p&gt;The previous command packed the entire application into a self-contained Windows executable. You can see from the size (66M) that the runtime is included.&lt;/p&gt; &lt;p&gt;The SDK can now also leverage &lt;a href="https://github.com/mono/linker"&gt;mono’s linker&lt;/a&gt; to detect unused assemblies. When we add the &lt;code&gt;PublishTrimmed&lt;/code&gt; property, our self-contained app shrinks to 26M.&lt;/p&gt; &lt;pre&gt;$ dotnet publish -r win-x64 /p:PublishSingleFile=true /p:PublishTrimmed=true $ ls -lh bin/Debug/netcoreapp3.0/win-x64/publish/*.exe -rwxrw-r--. 1 tmds tmds 26M Sep 13 09:09 bin/Debug/netcoreapp3.0/win-x64/publish/console.exe &lt;/pre&gt; &lt;h3&gt;ARM64&lt;/h3&gt; &lt;p&gt;.NET Core adds support for Linux ARM64. The primary use case is Internet of Things (IoT) scenarios.&lt;/p&gt; &lt;h3&gt;SerialPort support&lt;/h3&gt; &lt;p&gt;The &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.io.ports.serialport?view=netcore-3.0"&gt;SerialPort&lt;/a&gt; class now also works on Linux. You can use this for example when running .NET Core on Raspberry Pi or other embedded Linux platforms.&lt;/p&gt; &lt;h3&gt;TLS 1.3&lt;/h3&gt; &lt;p&gt;When .NET Core runs on a system with &lt;a href="https://www.openssl.org/blog/blog/2018/09/11/release111/"&gt;OpenSSL 1.1.1&lt;/a&gt; (like recent versions of Fedora, and RHEL8) &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.net.security.sslstream?view=netcore-3.0"&gt;SslStream&lt;/a&gt; and &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclient?view=netcore-3.0"&gt;HttpClient&lt;/a&gt; use TLS 1.3 when the peer supports it. TLS 1.3 improves connection time and security.&lt;/p&gt; &lt;h3&gt;Building systemd services&lt;/h3&gt; &lt;p&gt;.NET Core comes with templates for building workers, which are long-running services. The worker template (&lt;code&gt;dotnet new worker&lt;/code&gt;) has extension packages for building &lt;a href="https://devblogs.microsoft.com/aspnet/net-core-workers-as-windows-services/"&gt;Windows services&lt;/a&gt; and &lt;a href="https://devblogs.microsoft.com/dotnet/net-core-and-systemd/"&gt;systemd services&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;ReadyToRun&lt;/h3&gt; &lt;p&gt;The SDK now allows the application to be compiled ahead of time. This adds native code in the assemblies. It also means the code no longer has to be just-in-time compiled when it is first executed, which reduces startup time.&lt;/p&gt; &lt;p&gt;To publish a ready-to-run application, you need to specify a runtime identifier (which determines the native code you’ll generate) and the &lt;code&gt;/p:PublishReadyToRun=true&lt;/code&gt; argument.&lt;/p&gt; &lt;pre&gt;$ dotnet build -r linux-x64 /p:PublishReadyToRun=true &lt;/pre&gt; &lt;p&gt;By default, this publishes a self-contained application. To publish a framework dependent application, you can add &lt;code&gt;--no-self-contained&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;OpenShift’s .NET Core builder (&lt;a href="https://github.com/redhat-developer/s2i-dotnetcore"&gt;s2i-dotnetcore&lt;/a&gt;) can build ReadyToRun images by setting the new &lt;code&gt;DOTNET_PUBLISH_READYTORUN&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &lt;h3&gt;GC in containers with low memory&lt;/h3&gt; &lt;p&gt;.NET Core 3.0 works better in containers with low memory allocation. Previous versions allocated a large heap per CPU and performed garbage collections (GCs) based on memory used versus memory available. This could lead to the application going out-of-memory (OOM). &lt;a href="https://devblogs.microsoft.com/dotnet/using-net-and-docker-together-dockercon-2019-update/"&gt;.NET Core 3.0 takes into account the memory limits when heaps are created&lt;/a&gt;. This means the heaps are smaller, and the number of heaps is limited depending on the memory allocated to the container.&lt;/p&gt; &lt;p&gt;Changing ASP.NET Core applications to use workstation garbage collector (GC) has been a way to work around this issue (workstation GC uses a single, smaller heap). This workaround is no longer necessary with .NET Core 3.0.&lt;/p&gt; &lt;p&gt;If you wonder what type of GC your app is using: by default ASP.NET Core applications (which use the &lt;code&gt;Microsoft.NET.Sdk.Web&lt;/code&gt; in the &lt;code&gt;csproj&lt;/code&gt; file) use server GC. Console applications (&lt;code&gt;Microsoft.NET.Sdk&lt;/code&gt;) default to workstation GC. When the application is running on a single processor (like a container with CPU allocated 1 or less), the runtime will automatically switch to workstation GC.&lt;/p&gt; &lt;h3&gt;GC on machines with more than 64 CPUs&lt;/h3&gt; &lt;p&gt;Windows APIs are based on &lt;a href="https://docs.microsoft.com/en-us/windows/win32/procthread/processor-groups"&gt;processor groups&lt;/a&gt; of up to 64 processors, while Linux APIs work with an arbitrary number of processors. In previous versions of .NET Core, the GC would artificially group processors on Linux to form processor groups. &lt;a href="https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/runtime/gccpugroup-element"&gt;By default&lt;/a&gt;, server GC would limit its number of threads to the number of processors in a single group (max 64). With .NET Core 3.0, the processor group emulation is removed from the GC, and server GC will match the number of processors allocated to the process (not limited to 64).&lt;/p&gt; &lt;h3&gt;Huge page support&lt;/h3&gt; &lt;p&gt;On systems that are configured with &lt;a href="https://www.kernel.org/doc/Documentation/vm/hugetlbpage.txt"&gt;huge page support&lt;/a&gt;, the .NET GC can be configured to allocate huge pages by setting the environmental variable &lt;code&gt;COMPlus_GCLargePages&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;. Because memory is reserved when the application starts the GC needs to know how much memory it can use. The runtime assumes some limits when running in a container. If you’re running outside a container, you need to provide these this using &lt;a href="https://devblogs.microsoft.com/dotnet/running-with-server-gc-in-a-small-container-scenario-part-1-hard-limit-for-the-gc-heap/"&gt;COMPlus_GCHeapHardLimit/COMPlus_GCHeapHardLimitPercent&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Diagnostic tools&lt;/h3&gt; &lt;p&gt;With .NET Core 3.0, Microsoft is &lt;a href="https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/"&gt;providing&lt;/a&gt; cross-platform command-line tools for diagnostics: &lt;a href="https://github.com/dotnet/diagnostics/blob/master/documentation/dotnet-dump-instructions.md"&gt;dotnet-dump&lt;/a&gt; (for collecting and analyzing dumps), &lt;a href="https://github.com/dotnet/diagnostics/blob/master/documentation/dotnet-trace-instructions.md"&gt;dotnet-trace&lt;/a&gt; (for collecting traces), and &lt;a href="https://github.com/dotnet/diagnostics/blob/master/documentation/dotnet-counters-instructions.md"&gt;dotnet-counters&lt;/a&gt; (for live viewing of performance counters).&lt;/p&gt; &lt;p&gt;For example, the following commands show how to install &lt;code&gt;dotnet-dump&lt;/code&gt;, use it to collect a dump from the running .NET Core application &lt;code&gt;console&lt;/code&gt;, load the dump, and show a managed stack trace.&lt;/p&gt; &lt;pre&gt;$ dotnet tool install -g dotnet-dump $ dotnet dump collect -p $(pidof console) Writing minidump with heap to /tmp/core_20190911_104217 Complete $ dotnet dump analyze /tmp/core_20190911_104217 Loading core dump: /tmp/core_20190911_104217 ... Ready to process analysis commands. Type 'help' to list available commands or 'help [command]' to get detailed help on a command. Type 'quit' or 'exit' to exit the session. &amp;#62; clrstack OS Thread Id: 0x3f4f (0) Child SP IP Call Site 00007FFE05DB3068 00007fe0f046c83c [HelperMethodFrame: 00007ffe05db3068] System.Threading.Thread.SleepInternal(Int32) 00007FFE05DB31B0 00007FE0760B580B System.Threading.Thread.Sleep(Int32) 00007FFE05DB31C0 00007FE0765C007D console.Program.Main(System.String[]) [/tmp/console/Program.cs @ 9] 00007FFE05DB34A8 00007fe0ef98df83 [GCFrame: 00007ffe05db34a8] 00007FFE05DB39A0 00007fe0ef98df83 [GCFrame: 00007ffe05db39a0] &amp;#62; &lt;/pre&gt; &lt;p&gt;As you can see, &lt;code&gt;console&lt;/code&gt; is calling &lt;code&gt;Thread.Sleep&lt;/code&gt; from &lt;code&gt;Program.Main&lt;/code&gt;.&lt;/p&gt; &lt;h3&gt;Conclusion&lt;/h3&gt; &lt;p&gt;Here we covered several interesting features of .NET Core 3.0 on Linux and Linux containers. For a broader picture, check out the &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0"&gt;what’s new in .NET Core 3.0&lt;/a&gt; documentation.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#38;linkname=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F17%2Fnew-features-in-net-core-3-0-on-linux%2F&amp;#038;title=New%20features%20in%20.NET%20Core%203.0%20on%20Linux" data-a2a-url="https://developers.redhat.com/blog/2019/10/17/new-features-in-net-core-3-0-on-linux/" data-a2a-title="New features in .NET Core 3.0 on Linux"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/17/new-features-in-net-core-3-0-on-linux/"&gt;New features in .NET Core 3.0 on Linux&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zAmbhMOnfM4" height="1" width="1" alt=""/&gt;</content><summary>.NET Core 3.0 brings many exciting new features, including a new major release of C#, improved performance and support for building Windows desktop applications (on Windows). In this article, we’ll look at interesting new features for Linux and Linux container users. Faster and smaller SDK The SDK is smaller and faster. Previous versions of .NET Core used NuGet packages when building an applicatio...</summary><dc:creator>Tom Deseyn</dc:creator><dc:date>2019-10-17T07:05:31Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/17/new-features-in-net-core-3-0-on-linux/</feedburner:origLink></entry></feed>
